{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport var useScrollHandler = function useScrollHandler() {\n  _s();\n\n  var _useState = useState(false),\n      isScrolled = _useState[0],\n      setIsScrolled = _useState[1];\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      var scrollCheck = window.scrollY > 40;\n\n      if (scrollCheck !== scroll) {\n        setIsScrolled(scrollCheck);\n      }\n    };\n\n    document.addEventListener(\"scroll\", onScroll);\n    return function () {\n      document.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [isScrolled, setIsScrolled]);\n  return isScrolled;\n};\n\n_s(useScrollHandler, \"UCaI8lpZVGvPrsRoIFYRt2wv0+o=\");","map":{"version":3,"sources":["/home/cyclopz/Cyclopz/Freelance/impedfin/utils/useScrollHandler.jsx"],"names":["useState","useEffect","useScrollHandler","isScrolled","setIsScrolled","onScroll","scrollCheck","window","scrollY","scroll","document","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAAA,kBACAF,QAAQ,CAAC,KAAD,CADR;AAAA,MAC7BG,UAD6B;AAAA,MACjBC,aADiB;;AAGpCH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,UAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAArC;;AACA,UAAIF,WAAW,KAAKG,MAApB,EAA4B;AAC1BL,QAAAA,aAAa,CAACE,WAAD,CAAb;AACD;AACF,KALD;;AAOAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCN,QAApC;AAEA,WAAO,YAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,QAA7B,EAAuCP,QAAvC;AACD,KAFD;AAGD,GAbQ,EAaN,CAACF,UAAD,EAAaC,aAAb,CAbM,CAAT;AAeA,SAAOD,UAAP;AACD,CAnBM;;GAAMD,gB","sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport const useScrollHandler = () => {\n  const [isScrolled, setIsScrolled] = useState(false)\n\n  useEffect(() => {\n    const onScroll = () => {\n      const scrollCheck = window.scrollY > 40\n      if (scrollCheck !== scroll) {\n        setIsScrolled(scrollCheck)\n      }\n    }\n\n    document.addEventListener(\"scroll\", onScroll)\n\n    return () => {\n      document.removeEventListener(\"scroll\", onScroll)\n    }\n  }, [isScrolled, setIsScrolled])\n\n  return isScrolled\n}"]},"metadata":{},"sourceType":"module"}